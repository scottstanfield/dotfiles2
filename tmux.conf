# Constants
tm_icon=♠			# spades
tm_icon=☃			# unicode snowman for you
tm_icon=ಠ_ಠ			# disapproving ascii

set -sg escape-time 0

tm_color_active=colour82
tm_color_inactive=colour241
tm_color_feature=colour10
tm_color_music=colour10
tm_active_border_color=colour10

# Change ctrl-b default tmux activation to ctrl-o
unbind-key C-b
set -g prefix 'C-o'
bind-key 'C-o' send-prefix

# quick pane cycling (ctrl-o twice quickly)
unbind ^O
bind ^O select-pane -t :.+

set -g default-terminal "screen-256color"

setw -g mode-keys vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded"

# start window numbering at 1 for easier switching
set -g base-index 1

# don't let tmux rename our windows in the status bar
set-option -g allow-rename off


# listen to alerts from all windows
set -g bell-action any

# Rebind pane tiling to sane mnemonics and start 
# new window in same directory from where you are now.

bind v split-window -h -c "#{pane_current_path}"
bind s split-window -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
# bind c split-window -c "#{pane_current_path}"

# pane resizing
bind H resize-pane -L 5
bind J resize-pane -D 5
bind K resize-pane -U 5
bind L resize-pane -R 5


# #vim splits
# bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
# bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
# bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
# bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
# bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l"

# Fix clear screen
bind C-l send-keys 'C-l'

# Fix yank
bind C-k send-keys 'C-k'

# Mouse Mode Settings
set -g mouse on

# Restore tmux 2.0 mouse wheel behavior 
bind-key -T root WheelUpPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
bind-key -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"

# These might conflict with the vim/tmux/vi/system clipboard binding
# bind-key -t vi-copy WheelUpPane halfpage-up
# bind-key -t vi-copy WheelDownPane halfpage-down

# tmux 2.1 page up / page down for easy clipboard copying
bind-key -T root PPage if-shell -F "#{alternate_on}" "send-keys PPage" "copy-mode -e; send-keys PPage"
bind-key -t vi-copy PPage page-up
bind-key -t vi-copy NPage page-down

# Use vim keybindings in copy mode
setw -g mode-keys vi


#### COLOUR (Solarized light)

# default statusbar colors
set-option -g status-bg white #base2
set-option -g status-fg yellow #yellow
set-option -g status-attr default

# New window tabs in status bar
# setw -g window-status-format "#[fg=magenta]#[bg=black] #I #[bg=cyan]#[fg=colour8] #W "
# setw -g window-status-current-format "#[bg=brightmagenta]#[fg=colour8] #I #[fg=colour8]#[bg=colour14] #W "
# setw -g window-status-current-bg colour0
# setw -g window-status-current-fg colour11
# setw -g window-status-current-attr dim
# setw -g window-status-bg green
# setw -g window-status-fg black
# setw -g window-status-attr reverse
# setw -g window-status-content-bg colour0
# setw -g window-status-content-fg colour11
# setw -g window-status-content-attr bold,blink,reverse

# default window title colors
setw -g window-status-fg brightyellow #base00
setw -g window-status-bg default
setw -g window-status-attr dim
setw -g window-status-current-fg brightred #orange
setw -g window-status-current-bg default
setw -g window-status-current-attr bright
setw -g window-status-bell-style fg=white,bg=red #base2, red
setw -qg window-status-format "#I #W"
setw -qg window-status-current-format "#I•#W"
bind '-' setw window-status-format '#I'\; setw window-status-current-format '#I'
bind '+' setw window-status-format '#I:#W#F'\; setw window-status-current-format '#I:#W#F'

# pane border
set-option -g pane-border-fg black #base2
set-option -g pane-active-border-fg yellow #base1

# set-option -g pane-border-fg $tm_color_inactive
# set-option -g pane-active-border-fg $tm_active_border_color

# message text
set-option -g message-bg white #base2
set-option -g message-fg brightred #orange

# pane number display
set-option -g display-panes-active-colour blue #blue
set-option -g display-panes-colour brightred #orange

# clock
set-window-option -g clock-mode-colour green #green


# show a little visual status when somethings happening in other windows
# setw -g monitor-activity off
# set -g visual-activity off

# status bar config
set -g status-interval 5
set -g status-right-length 70

# set -g status-right $tm_tunes ' ' "#() | %H:%M %d-%h-%Y #h"

# For status bar
tm_session_name="#[fg=$tm_color_feature,bold]$tm_icon #S"
#tm_tunes="#[fg=$tm_color_music]#(osascript ~/bin/tunes.scpt)"
tm_date="#[fg=$tm_color_inactive] #() %R %b-%d"
tm_host="#[fg=$tm_color_feature,bold]#h"

# left status
set -g status-left $tm_session_name'  '
set -g status-left-length 50

# right status
set -g status-right $tm_date' '$tm_host

######################################
# Clipboard with VIM support in iterm2 P
# https://evertpot.com/osx-tmux-vim-copy-paste-clipboard/
######################################

set-option -g default-command "reattach-to-user-namespace -l zsh"

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Bind the tmux ']' to use pbpaste
bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"
